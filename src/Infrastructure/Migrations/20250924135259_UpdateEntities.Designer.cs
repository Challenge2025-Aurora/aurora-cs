// <auto-generated />
using System;
using Infrastructure.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(AuroraTraceContext))]
    [Migration("20250924135259_UpdateEntities")]
    partial class UpdateEntities
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entity.Deteccao", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(19)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int>("BboxH")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("bbox_h");

                    b.Property<int>("BboxW")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("bbox_w");

                    b.Property<int>("BboxX")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("bbox_x");

                    b.Property<int>("BboxY")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("bbox_y");

                    b.Property<double>("Confianca")
                        .HasColumnType("BINARY_DOUBLE")
                        .HasColumnName("confianca");

                    b.Property<string>("ModeloProb")
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)")
                        .HasColumnName("modelo_prob");

                    b.Property<string>("Placa")
                        .HasMaxLength(10)
                        .HasColumnType("NVARCHAR2(10)")
                        .HasColumnName("placa");

                    b.Property<string>("SetorEstimado")
                        .HasMaxLength(10)
                        .HasColumnType("NVARCHAR2(10)")
                        .HasColumnName("setor_estimado");

                    b.Property<string>("SlotEstimado")
                        .HasMaxLength(10)
                        .HasColumnType("NVARCHAR2(10)")
                        .HasColumnName("slot_estimado");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("timestamp");

                    b.HasKey("Id");

                    b.ToTable("AuroraDeteccoes", (string)null);
                });

            modelBuilder.Entity("Domain.Entity.Evento", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(19)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("criado_em");

                    b.Property<string>("Descricao")
                        .HasMaxLength(500)
                        .HasColumnType("NVARCHAR2(500)")
                        .HasColumnName("descricao");

                    b.Property<long>("MotoId")
                        .HasColumnType("NUMBER(19)")
                        .HasColumnName("moto_id");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("tipo");

                    b.HasKey("Id");

                    b.HasIndex("MotoId");

                    b.ToTable("AuroraEventos", (string)null);
                });

            modelBuilder.Entity("Domain.Entity.Moto", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(19)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("AtualizadoEm")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("atualizado_em");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)")
                        .HasColumnName("modelo");

                    b.Property<string>("Placa")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("NVARCHAR2(10)")
                        .HasColumnName("placa");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("status");

                    b.Property<string>("UltimoSetor")
                        .HasMaxLength(10)
                        .HasColumnType("NVARCHAR2(10)")
                        .HasColumnName("ultimo_setor");

                    b.Property<string>("UltimoSlot")
                        .HasMaxLength(10)
                        .HasColumnType("NVARCHAR2(10)")
                        .HasColumnName("ultimo_slot");

                    b.HasKey("Id");

                    b.ToTable("AuroraMotos", (string)null);
                });

            modelBuilder.Entity("Domain.Entity.Patio", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(19)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int>("Cols")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("cols");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)")
                        .HasColumnName("nome");

                    b.Property<int>("Rows")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("rows");

                    b.HasKey("Id");

                    b.ToTable("AuroraPatios", (string)null);
                });

            modelBuilder.Entity("Domain.Entity.Setor", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(19)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("nome");

                    b.Property<long>("PatioId")
                        .HasColumnType("NUMBER(19)")
                        .HasColumnName("patio_id");

                    b.Property<int>("Slots")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("slots");

                    b.HasKey("Id");

                    b.HasIndex("PatioId");

                    b.ToTable("AuroraSetores", (string)null);
                });

            modelBuilder.Entity("Domain.Entity.Evento", b =>
                {
                    b.HasOne("Domain.Entity.Moto", "Moto")
                        .WithMany()
                        .HasForeignKey("MotoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Moto");
                });

            modelBuilder.Entity("Domain.Entity.Setor", b =>
                {
                    b.HasOne("Domain.Entity.Patio", "Patio")
                        .WithMany("Setores")
                        .HasForeignKey("PatioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Patio");
                });

            modelBuilder.Entity("Domain.Entity.Patio", b =>
                {
                    b.Navigation("Setores");
                });
#pragma warning restore 612, 618
        }
    }
}
